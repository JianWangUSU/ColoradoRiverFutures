#Pull out the desired rows
#dfMeadPoolsPlot <- dfMeadAllPools[c(3,6,7,9:13,16),]
cMeadVarNames <- c("Inactive Capacity", "SNWA Intake #2", "Eq. Mid Tier", "SNWA Intake #1", "ISG trigger", "Minimum Power (from Object)",
"DCP trigger", "Eq. Protect Level", "Flood Pool (Jan 1\nFull upstream storage)","Bottom of Flood Pool (Feb- Sept)", "Live Capacity")
dfMeadPoolsPlot <- dfMeadAllPools %>% filter(variable %in% cMeadVarNames) %>% arrange(level)
dfMeadPoolsPlot$name <- as.character(dfMeadPoolsPlot$variable)
#Rename a few of the variable labels
dfMeadPoolsPlot[1,c("name")] <- "Dead Pool"
dfMeadPoolsPlot[6,c("name")] <- "Minimum Power (CRSS)"
dfMeadPoolsPlot[10,c("name")] <- "Flood Pool (Aug 1)"
#Create the y-axis tick label from the level and variable
dfMeadPoolsPlot$label <- paste(round(dfMeadPoolsPlot$level,0),'-',dfMeadPoolsPlot$name)
dfMeadTiers <- data.frame(elev = c(895,1025,1075,1105,1218.5))
#Interpolate off elevation area curve
dfMeadTiers$Volume <- vlookup(dfMeadTiers$elev,dfMeadElevStor,result_column=2,lookup_column = 1)
#Specify Powell Equalization levels by Year (data values from Interim Guidelines)
dfPowellEqLevels <- data.frame(Year = c(2008:2026), Elevation = c(3636,3639,3642,3643,3645,3646,3648,3649,3651,3652,3654,3655,3657,3659,3660,3663,3663,3664,3666))
dfPowellEqLevels$Volume <- vlookup(dfPowellEqLevels$Elevation,dfPowellElevStor,result_column=2,lookup_column = 1)/1000000
dfPowellEqLevels$MeadBeg <- 0
dfPowellEqLevels$MeadEnd <- dfMaxStor[2,2]
#dfPowellEqLevels$YearAsLabel <- paste0(dfPowellEqLevels$Year," Eq. Level","")
dfPowellEqLevels$YearAsLabel <- paste0("Upper Eq. Tier (",dfPowellEqLevels$Year,")")
#Filter by years of interest
cYears <- c(2008, 2019, 2026)
dfPowellEqLevelsFilt <- dfPowellEqLevels[,c("Year","YearAsLabel","Volume","MeadBeg", "MeadEnd")] %>% filter(Year %in% cYears) %>% arrange(Year)
dfPowellEqPlot <- melt(dfPowellEqLevelsFilt[,c("Year","Volume","MeadBeg", "MeadEnd")],id.vars = c("Year","Volume"))
# Define the polygons showing each tier to add to the plot. A polygon is defined by four points on the Mead-Powell storage plot. Lower-left (low Powell, low Mead), Lower-right (high Powell, low Mead), upper-right, upper-left (low Powell, high Mead)
# Polygon name
ids <- factor(c("Lower Tier", "Mid-Elevation Tier: Low Mead", "Mid-Elevation Tier: Higher Mead",
"Upper-Elevation Tier: Lower Mead", "Upper-Elevation Tier: Higher Mead", "Eq. Elev. (year)", "Equalization"))
# Polygon corners (see above for defs)
dfPositions <- data.frame(id = rep(ids, each = 4),
PowellVol = c(0,5.93,5.93,0,5.93,9.52,9.52,5.93,5.93,9.52,9.52,5.93,9.52,15.54,15.54,9.52,9.52,15.54,15.54,9.52,15.54,19.29,19.29,15.54,19.29,dfMaxStor[1,2],dfMaxStor[1,2],19.29),
MeadVol = c(0,0,dfMaxStor[2,2],dfMaxStor[2,2],0,0,5.98,5.98,5.98,5.98,25.9,dfMaxStor[2,2],0,0,9.6,9.6,9.6,9.6,dfMaxStor[2,2],dfMaxStor[2,2],0,0,dfMaxStor[2,2],dfMaxStor[2,2],0,0,dfMaxStor[2,2],dfMaxStor[2,2]))
#Allowable release(s) within each polygon
dfReleases <- data.frame(id = ids,
Release = c("Balance w/\n7.0 to 9.5\nMAF per year", "8.23\nMAF\nper year", "7.48\nMAF\nper year", "Balance w/\n7 to 9\nMAF per year", "8.23\nMAF per year", "","8.23 or above\nMAF per year"),
DumVal = c(1:7))
#Calculate midpoints for each polygon. This is the average of the cooridinates for
# the polygon
nPts <- nrow(dfPositions)/4
dfReleases$MidPowell <- 0
dfReleases$MidMead <- 0
for (point in 1:nPts) {
dfReleases[point,c("MidPowell")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("PowellVol")])
dfReleases[point,c("MidMead")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("MeadVol")])
}
#Reset midpoint positions for the 1st, 3rd, and 5th polygons  to high Mead Levels to position labels out of the way of other stuff on the figure (history)
dfReleases$MidMead[c(1,3,5)] <- 23.5
# Currently we need to manually merge the two together
dfPolyAll <- merge(dfReleases, dfPositions, by = c("id"))
dfOneToOneByFraction <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[2,2]))
dfOneToOneByVolume <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[1,2]))
#Pull in a blue color scheme for the pools
palBlues <- brewer.pal(9, "Blues") #For plotting equalization tiers
palPurples <- brewer.pal(9,"RdPu") #For overplotting one equalization tier
cPurple <- palPurples[8]
palReds <- brewer.pal(9,"Reds") #For plotting historical decade by color
palGreys <- brewer.pal(9,"Greys")
dfPowellTiers$FontColor[4] <- cPurple
#Construct the polygon fills from the blues. The last two tiers get the same blue color
#cTierColors <- c(palBlues[2:6],palPurples[3],palBlues[8])
cTierColors <- c(palBlues[2:6],palBlues[7],palBlues[7])
#Filter joint storages
dStart = 2007
#Filter to Januaries before and after start date
dfJointStorageFilt <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(month(dfJointStorage$DateAsValue) == 1)
dfJointStorageFiltBefore <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) <= dStart)
dfJointStorageFiltAfter <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) >= dStart)
#Filter to all months before and after start date
dfJointStorageBefore <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) <= dStart)
dfJointStorageAfter <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) >= dStart)
#### #1 - Show Current Equalization Rules
# Run 3 versions of the plot.
#   One with just the rules/tiers/zones
#   One with January monthly storage balance overlayed. Red is years before 2007 and Equilization Rules went into effect.
#       Purple is years after 2007 when Equalization Rules were in effect
#   One with Year storage balance (January) overlayed in Red (before guidelines) and Purple (after guidelines)
cS <- c(1:3)
cFileNames <- c("PowellMeadEq-Blank","PowellMeadEq-Annual","PowellMeadEq-Monthly")
cFileType <- ".tiff"
for (i in cS){
p <- ggplot(dfPolyAll, aes(x = PowellVol, y = MeadVol)) +
#Background tiers of different blues
geom_polygon(aes(fill = as.factor(DumVal), group = id)) +
#Plot equalization lines for years
geom_line(data = dfPowellEqPlot, aes(x = Volume, y = value,group=Year, color="Equalization levels (Year)"),size=1.25, linetype=2, show.legend = FALSE) +
#Label the boundary between the Upper Equalization Tier and the Equalization Tier (year dependent)
geom_text(data=dfPowellEqLevelsFilt, aes( x = Volume + 0.4, y = MeadEnd/5, label = YearAsLabel), color="black", angle = 90, size = 5) +
# Plot a 1:1 line to total storage
geom_line(data=dfOneToOneByVolume,aes(x=PowellStor,y=MeadStor, group=1, color="1:1 line (by volume)"), size=2, linetype="longdash", show.legend = FALSE) +
#Label the 1:1 line
geom_text(aes(x=3.5,y=4.2,label="1:1 line"), color="black", angle = 45, size =6, show.legend = FALSE)
if (i==2){
#Overplot Mead-Powell historical storage -- January of each year
#Before guidelines in place in Red
p<- p + geom_path(data = dfJointStorageFiltBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
#After guidelines in place in purple
p<- p + geom_path(data = dfJointStorageFiltAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
}
if (i==3){
#Overplot Mead-Powell historical storage -- all months
#Before guidelines in place in Red
p <- p+ geom_path(data = dfJointStorageBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1, linetype=1, show.legend = TRUE)
#After guidelines in place in Purple
p <- p+ geom_path(data = dfJointStorageAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1, linetype=1, show.legend = TRUE)
}
if (i==2 || i==3) {
#Label the each January with it's year
p <- p + geom_text_repel(data=dfJointStorageFilt[-seq(0,nrow(dfJointStorageFilt),2),], point.padding = NA, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="YearsText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text(data=dfJointStorageFiltAfter, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text_repel(data=dfJointStorageFiltAfter[-seq(0,nrow(dfJointStorageFiltBefore),2),], aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
}
#set colors for lines
p <- p + scale_color_manual(breaks = c("Before Guidelines", "After Guidelines"),
values= c("black",palPurples[8], palPurples[5], "black","black"),
labels = c("Before Guidelines", "With Guidelines")) +
#Label the equalization tiers with white callouts
geom_label(data=dfPowellTiers, aes(x = PowellMidVol, y = MeadMid, label = Tier, fontface="bold"), size=5, angle = 0) +
#Label the annual release amount within each equalization tier
geom_text(data=dfReleases, aes( x = MidPowell, y = MidMead, label = Release), angle = 0, size = 5) +
#Create secondary y axes for Mead Lake Level
scale_y_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
#Create secodary x axes for Powell Lake Level
scale_x_continuous(sec.axis = sec_axis(~. +0, name = "Powell Level (feet)", breaks = c(0,5.93,9.52,15.54,19.29,24.32) , labels = c(3370,3525,3575,3636,3666,3700))) +
#Specify fill colors for equalization tier quadrants
scale_fill_manual(breaks=c(1:7),values = cTierColors,labels = dfReleases$Release) +
theme_bw() +
coord_fixed() +
guides(size = "none", colour = guide_legend("Historical volumes (year)"), fill="none") +
labs(x="Powell Active Storage (MAF)", y="Mead Active Storage (MAF)", fill = "Powell Release (MAF/year)") +
theme(text = element_text(size=20), legend.text=element_text(size=16),
panel.border = element_rect(colour = "black", fill="NA"),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black", fill=palGreys[2]),
legend.position = c(1.13,0.620))
print(p)
#Low Resolution version
ggsave(paste0(cFileNames[i],cFileType), width=9, height = 6.5, units="in", dpi=96)
#High Resolution version
ggsave(paste0(cFileNames[i],"-HRES",cFileType), width=9, height = 6.5, units="in", dpi=300)
}
dfReleases <- data.frame(id = ids,
Release = c("Balance:\n7.0 to 9.5\nMAF per year", "8.23\nMAF\nper year", "7.48\nMAF\nper year", "Balance:\n7 to 9\nMAF per year", "8.23\nMAF per year", "","8.23 or above\nMAF per year"),
DumVal = c(1:7))
#Calculate midpoints for each polygon. This is the average of the cooridinates for
# the polygon
nPts <- nrow(dfPositions)/4
dfReleases$MidPowell <- 0
dfReleases$MidMead <- 0
for (point in 1:nPts) {
dfReleases[point,c("MidPowell")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("PowellVol")])
dfReleases[point,c("MidMead")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("MeadVol")])
}
#Reset midpoint positions for the 1st, 3rd, and 5th polygons  to high Mead Levels to position labels out of the way of other stuff on the figure (history)
dfReleases$MidMead[c(1,3,5)] <- 23.5
# Currently we need to manually merge the two together
dfPolyAll <- merge(dfReleases, dfPositions, by = c("id"))
dfOneToOneByFraction <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[2,2]))
dfOneToOneByVolume <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[1,2]))
#Pull in a blue color scheme for the pools
palBlues <- brewer.pal(9, "Blues") #For plotting equalization tiers
palPurples <- brewer.pal(9,"RdPu") #For overplotting one equalization tier
cPurple <- palPurples[8]
palReds <- brewer.pal(9,"Reds") #For plotting historical decade by color
palGreys <- brewer.pal(9,"Greys")
dfPowellTiers$FontColor[4] <- cPurple
#Construct the polygon fills from the blues. The last two tiers get the same blue color
#cTierColors <- c(palBlues[2:6],palPurples[3],palBlues[8])
cTierColors <- c(palBlues[2:6],palBlues[7],palBlues[7])
#Filter joint storages
dStart = 2007
#Filter to Januaries before and after start date
dfJointStorageFilt <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(month(dfJointStorage$DateAsValue) == 1)
dfJointStorageFiltBefore <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) <= dStart)
dfJointStorageFiltAfter <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) >= dStart)
#Filter to all months before and after start date
dfJointStorageBefore <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) <= dStart)
dfJointStorageAfter <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) >= dStart)
#### #1 - Show Current Equalization Rules
# Run 3 versions of the plot.
#   One with just the rules/tiers/zones
#   One with January monthly storage balance overlayed. Red is years before 2007 and Equilization Rules went into effect.
#       Purple is years after 2007 when Equalization Rules were in effect
#   One with Year storage balance (January) overlayed in Red (before guidelines) and Purple (after guidelines)
cS <- c(1:3)
cFileNames <- c("PowellMeadEq-Blank","PowellMeadEq-Annual","PowellMeadEq-Monthly")
cFileType <- ".tiff"
for (i in cS){
p <- ggplot(dfPolyAll, aes(x = PowellVol, y = MeadVol)) +
#Background tiers of different blues
geom_polygon(aes(fill = as.factor(DumVal), group = id)) +
#Plot equalization lines for years
geom_line(data = dfPowellEqPlot, aes(x = Volume, y = value,group=Year, color="Equalization levels (Year)"),size=1.25, linetype=2, show.legend = FALSE) +
#Label the boundary between the Upper Equalization Tier and the Equalization Tier (year dependent)
geom_text(data=dfPowellEqLevelsFilt, aes( x = Volume + 0.4, y = MeadEnd/5, label = YearAsLabel), color="black", angle = 90, size = 5) +
# Plot a 1:1 line to total storage
geom_line(data=dfOneToOneByVolume,aes(x=PowellStor,y=MeadStor, group=1, color="1:1 line (by volume)"), size=2, linetype="longdash", show.legend = FALSE) +
#Label the 1:1 line
geom_text(aes(x=3.5,y=4.2,label="1:1 line"), color="black", angle = 45, size =6, show.legend = FALSE)
if (i==2){
#Overplot Mead-Powell historical storage -- January of each year
#Before guidelines in place in Red
p<- p + geom_path(data = dfJointStorageFiltBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
#After guidelines in place in purple
p<- p + geom_path(data = dfJointStorageFiltAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
}
if (i==3){
#Overplot Mead-Powell historical storage -- all months
#Before guidelines in place in Red
p <- p+ geom_path(data = dfJointStorageBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1, linetype=1, show.legend = TRUE)
#After guidelines in place in Purple
p <- p+ geom_path(data = dfJointStorageAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1, linetype=1, show.legend = TRUE)
}
if (i==2 || i==3) {
#Label the each January with it's year
p <- p + geom_text_repel(data=dfJointStorageFilt[-seq(0,nrow(dfJointStorageFilt),2),], point.padding = NA, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="YearsText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text(data=dfJointStorageFiltAfter, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text_repel(data=dfJointStorageFiltAfter[-seq(0,nrow(dfJointStorageFiltBefore),2),], aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
}
#set colors for lines
p <- p + scale_color_manual(breaks = c("Before Guidelines", "After Guidelines"),
values= c("black",palPurples[8], palPurples[5], "black","black"),
labels = c("Before Guidelines", "With Guidelines")) +
#Label the equalization tiers with white callouts
geom_label(data=dfPowellTiers, aes(x = PowellMidVol, y = MeadMid, label = Tier, fontface="bold"), size=5, angle = 0) +
#Label the annual release amount within each equalization tier
geom_text(data=dfReleases, aes( x = MidPowell, y = MidMead, label = Release), angle = 0, size = 5) +
#Create secondary y axes for Mead Lake Level
scale_y_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
#Create secodary x axes for Powell Lake Level
scale_x_continuous(sec.axis = sec_axis(~. +0, name = "Powell Level (feet)", breaks = c(0,5.93,9.52,15.54,19.29,24.32) , labels = c(3370,3525,3575,3636,3666,3700))) +
#Specify fill colors for equalization tier quadrants
scale_fill_manual(breaks=c(1:7),values = cTierColors,labels = dfReleases$Release) +
theme_bw() +
coord_fixed() +
guides(size = "none", colour = guide_legend("Historical volumes (year)"), fill="none") +
labs(x="Powell Active Storage (MAF)", y="Mead Active Storage (MAF)", fill = "Powell Release (MAF/year)") +
theme(text = element_text(size=20), legend.text=element_text(size=16),
panel.border = element_rect(colour = "black", fill="NA"),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black", fill=palGreys[2]),
legend.position = c(1.13,0.620))
print(p)
#Low Resolution version
ggsave(paste0(cFileNames[i],cFileType), width=9, height = 6.5, units="in", dpi=96)
#High Resolution version
ggsave(paste0(cFileNames[i],"-HRES",cFileType), width=9, height = 6.5, units="in", dpi=300)
}
dfPowellTiers <- data.frame(Tier = c("Lower Tier","Mid Tier","Upper Tier","Eq. Elev.\n(year)","Equalization Tier","Capacity"),
PowellLowerVol = c(0,5.93,9.52,15.54,19.29,dfMaxStor[1,2]))
dfPowellTiers <- mutate(dfPowellTiers, PowellMidVol = (lead(PowellLowerVol) + PowellLowerVol)/2)
# Mead volume to make plot labels come out nice
dfPowellTiers$MeadMid <- 0.67 #dfMaxStor[2,2]/2
dfPowellTiers$FontColor <- "black"
dfPowellTiers$MeadMid[4] <- 1.1 #Need to adjust plot position of this label
#Remove the fourth tier (equalization level)
dfPowellTiers <- dfPowellTiers[c(1:3,5),]
#Reset the mid point volume for the last tier
dfPowellTiers$PowellMidVol[4] <- mean(c(15.54,dfMaxStor[1,2]))
#Combine the original mead levels from CRSS with the levels added above
dfMeadAllPools <- rbind(dfMeadVals,dfMeadValsAdd) %>% filter(month == 1)
#dfMeadAllPools <- dfMeadAllPools[order(dfMeadAllPools$month, dfMeadAllPools$level),]
#Pull out the desired rows
#dfMeadPoolsPlot <- dfMeadAllPools[c(3,6,7,9:13,16),]
cMeadVarNames <- c("Inactive Capacity", "SNWA Intake #2", "Eq. Mid Tier", "SNWA Intake #1", "ISG trigger", "Minimum Power (from Object)",
"DCP trigger", "Eq. Protect Level", "Flood Pool (Jan 1\nFull upstream storage)","Bottom of Flood Pool (Feb- Sept)", "Live Capacity")
dfMeadPoolsPlot <- dfMeadAllPools %>% filter(variable %in% cMeadVarNames) %>% arrange(level)
dfMeadPoolsPlot$name <- as.character(dfMeadPoolsPlot$variable)
#Rename a few of the variable labels
dfMeadPoolsPlot[1,c("name")] <- "Dead Pool"
dfMeadPoolsPlot[6,c("name")] <- "Minimum Power (CRSS)"
dfMeadPoolsPlot[10,c("name")] <- "Flood Pool (Aug 1)"
#Create the y-axis tick label from the level and variable
dfMeadPoolsPlot$label <- paste(round(dfMeadPoolsPlot$level,0),'-',dfMeadPoolsPlot$name)
dfMeadTiers <- data.frame(elev = c(895,1025,1075,1105,1218.5))
#Interpolate off elevation area curve
dfMeadTiers$Volume <- vlookup(dfMeadTiers$elev,dfMeadElevStor,result_column=2,lookup_column = 1)
#Specify Powell Equalization levels by Year (data values from Interim Guidelines)
dfPowellEqLevels <- data.frame(Year = c(2008:2026), Elevation = c(3636,3639,3642,3643,3645,3646,3648,3649,3651,3652,3654,3655,3657,3659,3660,3663,3663,3664,3666))
dfPowellEqLevels$Volume <- vlookup(dfPowellEqLevels$Elevation,dfPowellElevStor,result_column=2,lookup_column = 1)/1000000
dfPowellEqLevels$MeadBeg <- 0
dfPowellEqLevels$MeadEnd <- dfMaxStor[2,2]
#dfPowellEqLevels$YearAsLabel <- paste0(dfPowellEqLevels$Year," Eq. Level","")
dfPowellEqLevels$YearAsLabel <- paste0("Upper Eq. Tier (",dfPowellEqLevels$Year,")")
#Filter by years of interest
cYears <- c(2008, 2019, 2026)
dfPowellEqLevelsFilt <- dfPowellEqLevels[,c("Year","YearAsLabel","Volume","MeadBeg", "MeadEnd")] %>% filter(Year %in% cYears) %>% arrange(Year)
dfPowellEqPlot <- melt(dfPowellEqLevelsFilt[,c("Year","Volume","MeadBeg", "MeadEnd")],id.vars = c("Year","Volume"))
# Define the polygons showing each tier to add to the plot. A polygon is defined by four points on the Mead-Powell storage plot. Lower-left (low Powell, low Mead), Lower-right (high Powell, low Mead), upper-right, upper-left (low Powell, high Mead)
# Polygon name
ids <- factor(c("Lower Tier", "Mid-Elevation Tier: Low Mead", "Mid-Elevation Tier: Higher Mead",
"Upper-Elevation Tier: Lower Mead", "Upper-Elevation Tier: Higher Mead", "Eq. Elev. (year)", "Equalization"))
# Polygon corners (see above for defs)
dfPositions <- data.frame(id = rep(ids, each = 4),
PowellVol = c(0,5.93,5.93,0,5.93,9.52,9.52,5.93,5.93,9.52,9.52,5.93,9.52,15.54,15.54,9.52,9.52,15.54,15.54,9.52,15.54,19.29,19.29,15.54,19.29,dfMaxStor[1,2],dfMaxStor[1,2],19.29),
MeadVol = c(0,0,dfMaxStor[2,2],dfMaxStor[2,2],0,0,5.98,5.98,5.98,5.98,25.9,dfMaxStor[2,2],0,0,9.6,9.6,9.6,9.6,dfMaxStor[2,2],dfMaxStor[2,2],0,0,dfMaxStor[2,2],dfMaxStor[2,2],0,0,dfMaxStor[2,2],dfMaxStor[2,2]))
#Allowable release(s) within each polygon
dfReleases <- data.frame(id = ids,
Release = c("Balance:\nRelease\n7.0 to 9.5\nMAF per year", "Release\n8.23\nMAF\nper year", "Release\n7.48\nMAF\nper year", "Balance:Release\n\n7 to 9\nMAF per year", "Release\n8.23\nMAF per year", "","Release\n8.23 or above\nMAF per year"),
DumVal = c(1:7))
#Calculate midpoints for each polygon. This is the average of the cooridinates for
# the polygon
nPts <- nrow(dfPositions)/4
dfReleases$MidPowell <- 0
dfReleases$MidMead <- 0
for (point in 1:nPts) {
dfReleases[point,c("MidPowell")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("PowellVol")])
dfReleases[point,c("MidMead")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("MeadVol")])
}
#Reset midpoint positions for the 1st, 3rd, and 5th polygons  to high Mead Levels to position labels out of the way of other stuff on the figure (history)
dfReleases$MidMead[c(1,3,5)] <- 23.5
# Currently we need to manually merge the two together
dfPolyAll <- merge(dfReleases, dfPositions, by = c("id"))
dfOneToOneByFraction <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[2,2]))
dfOneToOneByVolume <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[1,2]))
#Pull in a blue color scheme for the pools
palBlues <- brewer.pal(9, "Blues") #For plotting equalization tiers
palPurples <- brewer.pal(9,"RdPu") #For overplotting one equalization tier
cPurple <- palPurples[8]
palReds <- brewer.pal(9,"Reds") #For plotting historical decade by color
palGreys <- brewer.pal(9,"Greys")
dfPowellTiers$FontColor[4] <- cPurple
#Construct the polygon fills from the blues. The last two tiers get the same blue color
#cTierColors <- c(palBlues[2:6],palPurples[3],palBlues[8])
cTierColors <- c(palBlues[2:6],palBlues[7],palBlues[7])
#Filter joint storages
dStart = 2007
#Filter to Januaries before and after start date
dfJointStorageFilt <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(month(dfJointStorage$DateAsValue) == 1)
dfJointStorageFiltBefore <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) <= dStart)
dfJointStorageFiltAfter <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) >= dStart)
#Filter to all months before and after start date
dfJointStorageBefore <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) <= dStart)
dfJointStorageAfter <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) >= dStart)
#### #1 - Show Current Equalization Rules
# Run 3 versions of the plot.
#   One with just the rules/tiers/zones
#   One with January monthly storage balance overlayed. Red is years before 2007 and Equilization Rules went into effect.
#       Purple is years after 2007 when Equalization Rules were in effect
#   One with Year storage balance (January) overlayed in Red (before guidelines) and Purple (after guidelines)
cS <- c(1:3)
cFileNames <- c("PowellMeadEq-Blank","PowellMeadEq-Annual","PowellMeadEq-Monthly")
cFileType <- ".tiff"
for (i in cS){
p <- ggplot(dfPolyAll, aes(x = PowellVol, y = MeadVol)) +
#Background tiers of different blues
geom_polygon(aes(fill = as.factor(DumVal), group = id)) +
#Plot equalization lines for years
geom_line(data = dfPowellEqPlot, aes(x = Volume, y = value,group=Year, color="Equalization levels (Year)"),size=1.25, linetype=2, show.legend = FALSE) +
#Label the boundary between the Upper Equalization Tier and the Equalization Tier (year dependent)
geom_text(data=dfPowellEqLevelsFilt, aes( x = Volume + 0.4, y = MeadEnd/5, label = YearAsLabel), color="black", angle = 90, size = 5) +
# Plot a 1:1 line to total storage
geom_line(data=dfOneToOneByVolume,aes(x=PowellStor,y=MeadStor, group=1, color="1:1 line (by volume)"), size=2, linetype="longdash", show.legend = FALSE) +
#Label the 1:1 line
geom_text(aes(x=3.5,y=4.2,label="1:1 line"), color="black", angle = 45, size =6, show.legend = FALSE)
if (i==2){
#Overplot Mead-Powell historical storage -- January of each year
#Before guidelines in place in Red
p<- p + geom_path(data = dfJointStorageFiltBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
#After guidelines in place in purple
p<- p + geom_path(data = dfJointStorageFiltAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
}
if (i==3){
#Overplot Mead-Powell historical storage -- all months
#Before guidelines in place in Red
p <- p+ geom_path(data = dfJointStorageBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1, linetype=1, show.legend = TRUE)
#After guidelines in place in Purple
p <- p+ geom_path(data = dfJointStorageAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1, linetype=1, show.legend = TRUE)
}
if (i==2 || i==3) {
#Label the each January with it's year
p <- p + geom_text_repel(data=dfJointStorageFilt[-seq(0,nrow(dfJointStorageFilt),2),], point.padding = NA, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="YearsText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text(data=dfJointStorageFiltAfter, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text_repel(data=dfJointStorageFiltAfter[-seq(0,nrow(dfJointStorageFiltBefore),2),], aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
}
#set colors for lines
p <- p + scale_color_manual(breaks = c("Before Guidelines", "After Guidelines"),
values= c("black",palPurples[8], palPurples[5], "black","black"),
labels = c("Before Guidelines", "With Guidelines")) +
#Label the equalization tiers with white callouts
geom_label(data=dfPowellTiers, aes(x = PowellMidVol, y = MeadMid, label = Tier, fontface="bold"), size=5, angle = 0) +
#Label the annual release amount within each equalization tier
geom_text(data=dfReleases, aes( x = MidPowell, y = MidMead, label = Release), angle = 0, size = 5) +
#Create secondary y axes for Mead Lake Level
scale_y_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
#Create secodary x axes for Powell Lake Level
scale_x_continuous(sec.axis = sec_axis(~. +0, name = "Powell Level (feet)", breaks = c(0,5.93,9.52,15.54,19.29,24.32) , labels = c(3370,3525,3575,3636,3666,3700))) +
#Specify fill colors for equalization tier quadrants
scale_fill_manual(breaks=c(1:7),values = cTierColors,labels = dfReleases$Release) +
theme_bw() +
coord_fixed() +
guides(size = "none", colour = guide_legend("Historical volumes (year)"), fill="none") +
labs(x="Powell Active Storage (MAF)", y="Mead Active Storage (MAF)", fill = "Powell Release (MAF/year)") +
theme(text = element_text(size=20), legend.text=element_text(size=16),
panel.border = element_rect(colour = "black", fill="NA"),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black", fill=palGreys[2]),
legend.position = c(1.13,0.620))
print(p)
#Low Resolution version
ggsave(paste0(cFileNames[i],cFileType), width=9, height = 6.5, units="in", dpi=96)
#High Resolution version
ggsave(paste0(cFileNames[i],"-HRES",cFileType), width=9, height = 6.5, units="in", dpi=300)
}
dfReleases <- data.frame(id = ids,
Release = c("Balance:\nRelease\n7.0 to 9.5\nMAF per year", "Release\n8.23\nMAF\nper year", "Release\n7.48\nMAF\nper year", "Balance:\nRelease\n7 to 9\nMAF per year", "Release\n8.23\nMAF per year", "","Release\n8.23 or above\nMAF per year"),
DumVal = c(1:7))
#Calculate midpoints for each polygon. This is the average of the cooridinates for
# the polygon
nPts <- nrow(dfPositions)/4
dfReleases$MidPowell <- 0
dfReleases$MidMead <- 0
for (point in 1:nPts) {
dfReleases[point,c("MidPowell")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("PowellVol")])
dfReleases[point,c("MidMead")] = mean(dfPositions[(4*(point-1)+1):(4*point),c("MeadVol")])
}
#Reset midpoint positions for the 1st, 3rd, and 5th polygons  to high Mead Levels to position labels out of the way of other stuff on the figure (history)
dfReleases$MidMead[c(1,3,5)] <- 23.5
# Currently we need to manually merge the two together
dfPolyAll <- merge(dfReleases, dfPositions, by = c("id"))
dfOneToOneByFraction <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[2,2]))
dfOneToOneByVolume <- data.frame(PowellStor = c(0,dfMaxStor[1,2]),MeadStor = c(0,dfMaxStor[1,2]))
#Pull in a blue color scheme for the pools
palBlues <- brewer.pal(9, "Blues") #For plotting equalization tiers
palPurples <- brewer.pal(9,"RdPu") #For overplotting one equalization tier
cPurple <- palPurples[8]
palReds <- brewer.pal(9,"Reds") #For plotting historical decade by color
palGreys <- brewer.pal(9,"Greys")
dfPowellTiers$FontColor[4] <- cPurple
#Construct the polygon fills from the blues. The last two tiers get the same blue color
#cTierColors <- c(palBlues[2:6],palPurples[3],palBlues[8])
cTierColors <- c(palBlues[2:6],palBlues[7],palBlues[7])
#Filter joint storages
dStart = 2007
#Filter to Januaries before and after start date
dfJointStorageFilt <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(month(dfJointStorage$DateAsValue) == 1)
dfJointStorageFiltBefore <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) <= dStart)
dfJointStorageFiltAfter <- dfJointStorageFilt %>% arrange(dfJointStorageFilt$DateAsValue) %>% filter(as.numeric(format(dfJointStorageFilt$DateAsValue,"%Y")) >= dStart)
#Filter to all months before and after start date
dfJointStorageBefore <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) <= dStart)
dfJointStorageAfter <- dfJointStorage %>% arrange(dfJointStorage$DateAsValue) %>% filter(as.numeric(format(dfJointStorage$DateAsValue,"%Y")) >= dStart)
#### #1 - Show Current Equalization Rules
# Run 3 versions of the plot.
#   One with just the rules/tiers/zones
#   One with January monthly storage balance overlayed. Red is years before 2007 and Equilization Rules went into effect.
#       Purple is years after 2007 when Equalization Rules were in effect
#   One with Year storage balance (January) overlayed in Red (before guidelines) and Purple (after guidelines)
cS <- c(1:3)
cFileNames <- c("PowellMeadEq-Blank","PowellMeadEq-Annual","PowellMeadEq-Monthly")
cFileType <- ".tiff"
for (i in cS){
p <- ggplot(dfPolyAll, aes(x = PowellVol, y = MeadVol)) +
#Background tiers of different blues
geom_polygon(aes(fill = as.factor(DumVal), group = id)) +
#Plot equalization lines for years
geom_line(data = dfPowellEqPlot, aes(x = Volume, y = value,group=Year, color="Equalization levels (Year)"),size=1.25, linetype=2, show.legend = FALSE) +
#Label the boundary between the Upper Equalization Tier and the Equalization Tier (year dependent)
geom_text(data=dfPowellEqLevelsFilt, aes( x = Volume + 0.4, y = MeadEnd/5, label = YearAsLabel), color="black", angle = 90, size = 5) +
# Plot a 1:1 line to total storage
geom_line(data=dfOneToOneByVolume,aes(x=PowellStor,y=MeadStor, group=1, color="1:1 line (by volume)"), size=2, linetype="longdash", show.legend = FALSE) +
#Label the 1:1 line
geom_text(aes(x=3.5,y=4.2,label="1:1 line"), color="black", angle = 45, size =6, show.legend = FALSE)
if (i==2){
#Overplot Mead-Powell historical storage -- January of each year
#Before guidelines in place in Red
p<- p + geom_path(data = dfJointStorageFiltBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
#After guidelines in place in purple
p<- p + geom_path(data = dfJointStorageFiltAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1.5, linetype=1, show.legend = TRUE)
}
if (i==3){
#Overplot Mead-Powell historical storage -- all months
#Before guidelines in place in Red
p <- p+ geom_path(data = dfJointStorageBefore, aes(x = PowellStorage, y = MeadStorage, color="Before Guidelines"), size=1, linetype=1, show.legend = TRUE)
#After guidelines in place in Purple
p <- p+ geom_path(data = dfJointStorageAfter, aes(x = PowellStorage, y = MeadStorage, color="After Guidelines"), size=1, linetype=1, show.legend = TRUE)
}
if (i==2 || i==3) {
#Label the each January with it's year
p <- p + geom_text_repel(data=dfJointStorageFilt[-seq(0,nrow(dfJointStorageFilt),2),], point.padding = NA, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="YearsText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text(data=dfJointStorageFiltAfter, aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
#p <- p + geom_text_repel(data=dfJointStorageFiltAfter[-seq(0,nrow(dfJointStorageFiltBefore),2),], aes( x = PowellStorage, y = MeadStorage, label = year(DateAsValue), color="AfterGuidesText", angle = 0, size = 4, check_overlap = TRUE))
}
#set colors for lines
p <- p + scale_color_manual(breaks = c("Before Guidelines", "After Guidelines"),
values= c("black",palPurples[8], palPurples[5], "black","black"),
labels = c("Before Guidelines", "With Guidelines")) +
#Label the equalization tiers with white callouts
geom_label(data=dfPowellTiers, aes(x = PowellMidVol, y = MeadMid, label = Tier, fontface="bold"), size=5, angle = 0) +
#Label the annual release amount within each equalization tier
geom_text(data=dfReleases, aes( x = MidPowell, y = MidMead, label = Release), angle = 0, size = 5) +
#Create secondary y axes for Mead Lake Level
scale_y_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
#Create secodary x axes for Powell Lake Level
scale_x_continuous(sec.axis = sec_axis(~. +0, name = "Powell Level (feet)", breaks = c(0,5.93,9.52,15.54,19.29,24.32) , labels = c(3370,3525,3575,3636,3666,3700))) +
#Specify fill colors for equalization tier quadrants
scale_fill_manual(breaks=c(1:7),values = cTierColors,labels = dfReleases$Release) +
theme_bw() +
coord_fixed() +
guides(size = "none", colour = guide_legend("Historical volumes (year)"), fill="none") +
labs(x="Powell Active Storage (MAF)", y="Mead Active Storage (MAF)", fill = "Powell Release (MAF/year)") +
theme(text = element_text(size=20), legend.text=element_text(size=16),
panel.border = element_rect(colour = "black", fill="NA"),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black", fill=palGreys[2]),
legend.position = c(1.13,0.620))
print(p)
#Low Resolution version
ggsave(paste0(cFileNames[i],cFileType), width=9, height = 6.5, units="in", dpi=96)
#High Resolution version
ggsave(paste0(cFileNames[i],"-HRES",cFileType), width=9, height = 6.5, units="in", dpi=300)
}
